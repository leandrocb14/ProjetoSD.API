// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoSD.API.DAO;

namespace ProjetoSD.WebAPI.Migrations
{
    [DbContext(typeof(EntidadeContext))]
    [Migration("20181126233356_UpdateNameColumnsTDOE")]
    partial class UpdateNameColumnsTDOE
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoSD.API.Models.Doenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CDOEID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("CDOETRATAMENTO")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("CDOEOQEH")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Profilaxia")
                        .IsRequired()
                        .HasColumnName("CDOEVITE")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("TipoStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CDOETIPOSTATUS")
                        .HasDefaultValue("S");

                    b.HasKey("Id");

                    b.ToTable("TDOE");
                });

            modelBuilder.Entity("ProjetoSD.API.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CMEDID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnName("CMEDCRM")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("CMEDNOME")
                        .HasColumnType("VARCHAR(90)");

                    b.Property<string>("Profissao")
                        .HasColumnName("CMEDPROFISSAO")
                        .HasColumnType("VARCHAR(90)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnName("CMEDUF");

                    b.Property<int>("UsuarioId")
                        .HasColumnName("CMEDUSUID");

                    b.HasKey("Id");

                    b.HasIndex("CRM")
                        .IsUnique();

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("TMED");
                });

            modelBuilder.Entity("ProjetoSD.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUSUID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("CUSUEMAIL")
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("CUSUSENHA")
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("TipoStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUSUTIPOSTATUS")
                        .HasDefaultValue("S");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("TUSU");
                });

            modelBuilder.Entity("ProjetoSD.API.Models.Medico", b =>
                {
                    b.HasOne("ProjetoSD.API.Models.Usuario", "Usuario")
                        .WithOne("Medico")
                        .HasForeignKey("ProjetoSD.API.Models.Medico", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
